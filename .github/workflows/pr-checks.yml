name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '9'

jobs:
  check-size:
    name: Bundle Size Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
      
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Build and analyze bundle
        run: |
          pnpm build
          npx size-limit --json > size-report.json || true
      
      - name: Comment bundle size
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let comment = '## üì¶ Bundle Size Report\n\n';
            
            try {
              const report = JSON.parse(fs.readFileSync('size-report.json', 'utf8'));
              comment += '| Package | Size | Limit | Status |\n';
              comment += '|---------|------|-------|--------|\n';
              
              report.forEach(item => {
                const status = item.passed ? '‚úÖ' : '‚ùå';
                comment += `| ${item.name} | ${item.size} | ${item.limit || 'N/A'} | ${status} |\n`;
              });
            } catch (e) {
              comment += '‚ö†Ô∏è Could not generate bundle size report.';
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  lighthouse:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
      
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Build application
        run: pnpm build
      
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v12
        with:
          urls: |
            http://localhost:3000
            http://localhost:3000/dashboard
          uploadArtifacts: true
          temporaryPublicStorage: true

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'